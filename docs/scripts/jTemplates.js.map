{"version":3,"sources":["webpack:///webpack/bootstrap 6f6f3e0c5fc4ede16e9f","webpack:///./src/web.ts","webpack:///./src/web.export.ts","webpack:///./src/index.ts","webpack:///./src/Node/nodeRef.ts","webpack:///./src/Node/nodeConfig.ts","webpack:///./src/DOM/domNodeConfig.ts","webpack:///./src/DOM/window.ts","webpack:///./src/Utils/list.ts","webpack:///./src/DOM/utils.ts","webpack:///./src/Node/component.ts","webpack:///./src/Store/Tree/observableScope.ts","webpack:///./src/Utils/emitter.ts","webpack:///./src/Node/componentNode.ts","webpack:///./src/Node/boundNode.ts","webpack:///./src/Store/index.ts","webpack:///./src/Store/Store/store.ts","webpack:///./src/Store/Tree/observableTree.ts","webpack:///./src/Store/Tree/observableNode.ts","webpack:///./src/Store/Tree/observableProxy.ts","webpack:///./src/Store/Store/StoreWriter.ts","webpack:///./src/Store/Store/storeAsync.ts","webpack:///./src/Store/Diff/diffAsync.ts","webpack:///./src/Store/Diff/diffTree.ts","webpack:///./src/Store/Diff/workerQueue.ts","webpack:///./src/Utils/asyncQueue.ts","webpack:///./src/Store/Diff/diffWorker.ts","webpack:///./src/Store/Store/StoreAsyncWriter.ts","webpack:///./src/Utils/injector.ts","webpack:///./src/Utils/decorators.ts","webpack:///./src/Utils/index.ts","webpack:///./src/Utils/animation.ts","webpack:///./src/DOM/index.ts","webpack:///./src/DOM/elements.ts","webpack:///./src/Node/elementNode.ts","webpack:///./src/DOM/svgElements.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;;;;;;;ACLA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChDA;AACA,+CAA8C,cAAc;AAC5D;AACA;;;;;;;ACHA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;;;;;ACtFA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClFA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0DAA0D;;;;;;;ACtD3D;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4EAA4E;;;;;;;AClF7E;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,sEAAsE;;;;;;;ACrFvE;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,0DAA0D;;;;;;;ACxI3D;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClFA;AACA,+CAA8C,cAAckBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpHA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,EAAC,2CAA2C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnHA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS,GAAG,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS,GAAG,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrCA;AACA;AACA,4BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,oCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,mCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,gCAA+B,qFAAqF;AACpH;AACA,MAAK;AACL;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1DA;AACA;AACA,4BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,oCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,mCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,gCAA+B,qFAAqF;AACpH;AACA,MAAK;AACL;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,oDAAoD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,+CAA+C;AAC/F,UAAS;AACT;AACA;AACA;AACA,iDAAgD,yCAAyC;AACzF,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxCA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,IAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,sBAAsB;AACzD;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;;;;;;AChKA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,EAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,yBAAyB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,6DAA6D;;;;;;;ACjB9D;AACA;AACA,4BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,oCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,mCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,gCAA+B,qFAAqF;AACpH;AACA,MAAK;AACL;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,UAAU,SAAS,GAAG,IAAI,qBAAqB;AAC3F;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,SAAS,GAAG,OAAO;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;;;;;;;AC/DA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,uDAAuD;;;;;;;ACjCxD;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA,gDAA+C,YAAY;AAC3D;AACA,UAAS;AACT;AACA,gDAA+C,YAAY;AAC3D;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA,gDAA+C,YAAY;AAC3D;AACA,gDAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,YAAY;AACpE,yDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA,yDAAwD,YAAY;AACpE;AACA,6DAA4D,YAAY;AACxE,yDAAwD,YAAY;AACpE;AACA,0DAAyD,YAAY;AACrE;AACA,sDAAqD,YAAY;AACjE;AACA,0DAAyD,YAAY;AACrE;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,iDAAiD;AAClD;AACA;AACA;AACA;AACA;;;;;;;ACxKA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;;;;;;;ACNA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,kCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,kCAAiC,WAAW;AAC5C;AACA;AACA;AACA,EAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA,EAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;;;;;;ACjGA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;;;;;;;ACPA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,gBAAgB,yBAAyB,GAAG;AACvG;AACA;;;;;;;ACxFA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAwE,gBAAgB,sCAAsC,GAAG;AACjI;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gEAAgE;;;;;;;AChIjE;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./lib/jTemplates.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6f6f3e0c5fc4ede16e9f","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Web = require(\"./web.export\");\r\nfor (var key in Web)\r\n    window[key] = Web[key];\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./index\"));\r\n__export(require(\"./Utils\"));\r\nvar Store_1 = require(\"./Store\");\r\nexports.ObservableScope = Store_1.ObservableScope;\r\nexports.Store = Store_1.Store;\r\nexports.StoreAsync = Store_1.StoreAsync;\r\n__export(require(\"./DOM\"));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/web.export.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst nodeRef_1 = require(\"./Node/nodeRef\");\r\nexports.NodeRef = nodeRef_1.NodeRef;\r\nconst component_1 = require(\"./Node/component\");\r\nexports.Component = component_1.Component;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst nodeConfig_1 = require(\"./nodeConfig\");\r\nclass NodeRef {\r\n    constructor(node) {\r\n        this.node = node;\r\n        this.destroyed = false;\r\n        this.childNodes = new Set();\r\n    }\r\n    get Destroyed() {\r\n        return this.destroyed;\r\n    }\r\n    get Node() {\r\n        return this.node;\r\n    }\r\n    AddChild(nodeRef) {\r\n        nodeRef.parent = this;\r\n        this.childNodes.add(nodeRef);\r\n        nodeConfig_1.NodeConfig.addChild(this.Node, nodeRef.Node);\r\n    }\r\n    AddChildAfter(currentChild, newChild) {\r\n        if (currentChild && !this.childNodes.has(currentChild))\r\n            throw \"currentChild is not valid\";\r\n        newChild.parent = this;\r\n        this.childNodes.add(newChild);\r\n        nodeConfig_1.NodeConfig.addChildAfter(this.Node, currentChild && currentChild.Node, newChild.Node);\r\n    }\r\n    DetachChild(nodeRef) {\r\n        if (this.childNodes.has(nodeRef)) {\r\n            this.childNodes.delete(nodeRef);\r\n            nodeConfig_1.NodeConfig.removeChild(this.Node, nodeRef.Node);\r\n            nodeRef.parent = null;\r\n        }\r\n    }\r\n    Init() {\r\n    }\r\n    Detach() {\r\n        if (this.parent)\r\n            this.parent.DetachChild(this);\r\n    }\r\n    Destroy() {\r\n        this.destroyed = true;\r\n        this.DestroyChildren();\r\n    }\r\n    DestroyChildren() {\r\n        this.childNodes.forEach(node => node.Destroy());\r\n    }\r\n}\r\nexports.NodeRef = NodeRef;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/nodeRef.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst domNodeConfig_1 = require(\"../DOM/domNodeConfig\");\r\nexports.NodeConfig = domNodeConfig_1.DOMNodeConfig;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/nodeConfig.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst window_1 = require(\"./window\");\r\nconst list_1 = require(\"../Utils/list\");\r\nconst utils_1 = require(\"./utils\");\r\nvar priorityUpdates = new list_1.List();\r\nvar pendingUpdates = new list_1.List();\r\nvar updateScheduled = false;\r\nfunction processUpdates() {\r\n    var start = Date.now();\r\n    var callback = priorityUpdates.Pop() || pendingUpdates.Pop();\r\n    callback && callback();\r\n    while (callback && (Date.now() - start) < 66) {\r\n        callback = priorityUpdates.Pop() || pendingUpdates.Pop();\r\n        callback && callback();\r\n    }\r\n    if (pendingUpdates.Size > 0)\r\n        window_1.wndw.requestAnimationFrame(processUpdates);\r\n    else\r\n        updateScheduled = false;\r\n}\r\nexports.DOMNodeConfig = {\r\n    createNode: function (type, namespace) {\r\n        if (namespace)\r\n            return window_1.wndw.document.createElementNS(namespace, type);\r\n        return type === \"text\" ? window_1.wndw.document.createTextNode(\"\") : window_1.wndw.document.createElement(type);\r\n    },\r\n    scheduleUpdate: function (callback, highPriority = false) {\r\n        if (highPriority)\r\n            priorityUpdates.Add(callback);\r\n        else\r\n            pendingUpdates.Add(callback);\r\n        if (!updateScheduled) {\r\n            updateScheduled = true;\r\n            window_1.wndw.requestAnimationFrame(processUpdates);\r\n        }\r\n    },\r\n    addListener: function (target, type, callback) {\r\n        target.addEventListener(type, callback);\r\n    },\r\n    removeListener: function (target, type, callback) {\r\n        target.removeEventListener(type, callback);\r\n    },\r\n    addChild: function (root, child) {\r\n        root.appendChild(child);\r\n    },\r\n    addChildFirst: function (root, child) {\r\n        exports.DOMNodeConfig.addChildBefore(root, root.firstChild, child);\r\n    },\r\n    addChildBefore: function (root, sibling, child) {\r\n        if (!sibling) {\r\n            exports.DOMNodeConfig.addChild(root, child);\r\n            return;\r\n        }\r\n        if (child !== sibling)\r\n            root.insertBefore(child, sibling);\r\n    },\r\n    addChildAfter: function (root, sibling, child) {\r\n        if (!sibling) {\r\n            exports.DOMNodeConfig.addChildFirst(root, child);\r\n            return;\r\n        }\r\n        exports.DOMNodeConfig.addChildBefore(root, sibling.nextSibling, child);\r\n    },\r\n    removeChild: function (root, child) {\r\n        root.removeChild(child);\r\n    },\r\n    remove: function (target) {\r\n        target && target.parentNode && target.parentNode.removeChild(target);\r\n    },\r\n    setText: function (target, text) {\r\n        target.textContent = text;\r\n    },\r\n    getAttribute(target, attribute) {\r\n        return target.getAttribute(attribute);\r\n    },\r\n    setAttribute(target, attribute, value) {\r\n        target.setAttribute(attribute, value);\r\n    },\r\n    fireEvent(target, event, data) {\r\n        var cEvent = new CustomEvent(event, data);\r\n        target.dispatchEvent(cEvent);\r\n    },\r\n    setPropertyOverrides: {\r\n        [\"value\"]: utils_1.SetInputValue\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/domNodeConfig.ts\n// module id = 5\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar glbl = null;\r\nif (typeof window != \"undefined\")\r\n    glbl = window;\r\nelse {\r\n    glbl = (new (require(\"jsdom\").JSDOM)(\"\")).window;\r\n}\r\nexports.wndw = glbl;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/window.ts\n// module id = 6\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass List {\r\n    constructor() {\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n    }\r\n    get Head() {\r\n        return this.head && this.head.data;\r\n    }\r\n    get Tail() {\r\n        return this.tail && this.tail.data;\r\n    }\r\n    get Size() {\r\n        return this.size;\r\n    }\r\n    Clear() {\r\n        this.head = null;\r\n        this.tail = null;\r\n        this.size = 0;\r\n    }\r\n    Push(data) {\r\n        var node = { previous: null, next: null, data: data };\r\n        if (this.size === 0) {\r\n            this.head = node;\r\n            this.tail = node;\r\n            this.size = 1;\r\n        }\r\n        else {\r\n            node.next = this.head;\r\n            this.head.previous = node;\r\n            this.head = node;\r\n            this.size++;\r\n        }\r\n    }\r\n    Pop() {\r\n        if (this.size === 0)\r\n            return null;\r\n        var node = this.head;\r\n        this.head = node.next;\r\n        if (this.head)\r\n            this.head.previous = null;\r\n        this.size--;\r\n        if (this.size === 0)\r\n            this.tail = null;\r\n        return node.data;\r\n    }\r\n    Add(data) {\r\n        var node = { previous: null, next: null, data: data };\r\n        if (this.size === 0) {\r\n            this.head = node;\r\n            this.tail = node;\r\n            this.size = 1;\r\n        }\r\n        else {\r\n            node.previous = this.tail;\r\n            this.tail.next = node;\r\n            this.tail = node;\r\n            this.size++;\r\n        }\r\n    }\r\n    Remove() {\r\n        if (this.size === 0)\r\n            return null;\r\n        var node = this.tail;\r\n        this.tail = node.previous;\r\n        if (this.tail)\r\n            this.tail.next = null;\r\n        this.size--;\r\n        if (this.size === 0)\r\n            this.head = null;\r\n        return node.data;\r\n    }\r\n    ForEach(callback) {\r\n        var node = this.head;\r\n        while (node) {\r\n            callback(node.data);\r\n            node = node.next;\r\n        }\r\n    }\r\n}\r\nexports.List = List;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/list.ts\n// module id = 7\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction SetInputValue(target, value) {\r\n    if (target.nodeName !== \"INPUT\")\r\n        target.value = value;\r\n    else {\r\n        var start = target.selectionStart;\r\n        var end = target.selectionEnd;\r\n        target.value = value;\r\n        target.setSelectionRange(start, end);\r\n    }\r\n}\r\nexports.SetInputValue = SetInputValue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/utils.ts\n// module id = 8\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst observableScope_1 = require(\"../Store/Tree/observableScope\");\r\nconst nodeRef_1 = require(\"./nodeRef\");\r\nconst componentNode_1 = require(\"./componentNode\");\r\nconst decorators_1 = require(\"../Utils/decorators\");\r\nclass Component {\r\n    constructor(data, templates, nodeRef, injector) {\r\n        this.nodeRef = nodeRef;\r\n        this.injector = injector;\r\n        this.scope = new observableScope_1.ObservableScope(data);\r\n        this.templates = templates || {};\r\n    }\r\n    get Injector() {\r\n        return this.injector;\r\n    }\r\n    get Destroyed() {\r\n        return this.nodeRef.Destroyed;\r\n    }\r\n    get Scope() {\r\n        return this.scope;\r\n    }\r\n    get Data() {\r\n        return this.scope.Value;\r\n    }\r\n    get NodeRef() {\r\n        return this.nodeRef;\r\n    }\r\n    get Templates() {\r\n        return this.templates;\r\n    }\r\n    Template() {\r\n        return [];\r\n    }\r\n    Bound() {\r\n    }\r\n    Fire(event, data) {\r\n        this.NodeRef.Fire(event, data);\r\n    }\r\n    Destroy() {\r\n        decorators_1.Destroy.All(this);\r\n    }\r\n}\r\nexports.Component = Component;\r\n(function (Component) {\r\n    function ToFunction(type, namespace, constructor) {\r\n        return componentNode_1.ComponentNode.ToFunction(type, namespace, constructor);\r\n    }\r\n    Component.ToFunction = ToFunction;\r\n    function Attach(node, nodeRef) {\r\n        var rootRef = new nodeRef_1.NodeRef(node);\r\n        rootRef.AddChild(nodeRef);\r\n    }\r\n    Component.Attach = Attach;\r\n})(Component = exports.Component || (exports.Component = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/component.ts\n// module id = 9\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst emitter_1 = require(\"../../Utils/emitter\");\r\nclass ObservableScope {\r\n    constructor(getFunction) {\r\n        this.emitter = new emitter_1.Emitter();\r\n        this.emitters = new Set();\r\n        this.setCallback = this.SetCallback.bind(this);\r\n        if (typeof getFunction === 'function') {\r\n            this.getFunction = getFunction;\r\n            this.dirty = true;\r\n        }\r\n        else {\r\n            this.value = getFunction;\r\n            this.dirty = false;\r\n        }\r\n    }\r\n    get Emitter() {\r\n        return this.emitter;\r\n    }\r\n    get Value() {\r\n        ObservableScope.Register(this.emitter);\r\n        this.UpdateValue();\r\n        return this.value;\r\n    }\r\n    Scope(callback) {\r\n        return new ObservableScope(() => callback(this.Value));\r\n    }\r\n    Watch(callback) {\r\n        this.emitter.On(\"set\", () => callback(this));\r\n    }\r\n    Destroy() {\r\n        this.emitters.forEach(e => this.RemoveListenersFrom(e));\r\n        this.emitters.clear();\r\n        this.emitter.Clear();\r\n    }\r\n    UpdateValue() {\r\n        if (!this.dirty)\r\n            return;\r\n        this.dirty = false;\r\n        var emitters = ObservableScope.Watch(() => this.value = this.getFunction());\r\n        this.UpdateEmitters(emitters);\r\n    }\r\n    UpdateEmitters(newEmitters) {\r\n        newEmitters.forEach(e => {\r\n            this.emitters.delete(e);\r\n            this.AddListenersTo(e);\r\n        });\r\n        this.emitters.forEach(e => this.RemoveListenersFrom(e));\r\n        this.emitters = newEmitters;\r\n    }\r\n    SetCallback() {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.emitter.Emit(\"set\");\r\n    }\r\n    AddListenersTo(emitter) {\r\n        emitter.On(\"set\", this.setCallback);\r\n    }\r\n    RemoveListenersFrom(emitter) {\r\n        emitter.Remove(\"set\", this.setCallback);\r\n    }\r\n}\r\nexports.ObservableScope = ObservableScope;\r\n(function (ObservableScope) {\r\n    var currentSet = null;\r\n    function Watch(action) {\r\n        var parentSet = currentSet;\r\n        currentSet = new Set();\r\n        action();\r\n        var lastSet = currentSet;\r\n        currentSet = parentSet;\r\n        return lastSet;\r\n    }\r\n    ObservableScope.Watch = Watch;\r\n    function Register(emitter) {\r\n        if (!currentSet)\r\n            return;\r\n        currentSet.add(emitter);\r\n    }\r\n    ObservableScope.Register = Register;\r\n})(ObservableScope = exports.ObservableScope || (exports.ObservableScope = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Tree/observableScope.ts\n// module id = 10\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Emitter {\r\n    constructor() {\r\n        this.events = new Map();\r\n    }\r\n    On(event, callback) {\r\n        var callbacks = this.events.get(event);\r\n        if (!callbacks) {\r\n            callbacks = new Set();\r\n            this.events.set(event, callbacks);\r\n        }\r\n        callbacks.add(callback);\r\n    }\r\n    Emit(event) {\r\n        var callbacks = this.events.get(event);\r\n        if (callbacks)\r\n            callbacks.forEach(cb => cb());\r\n    }\r\n    Remove(event, callback) {\r\n        var callbacks = this.events.get(event);\r\n        if (callbacks)\r\n            callbacks.delete(callback);\r\n    }\r\n    Clear() {\r\n        this.events.clear();\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nexports.default = Emitter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/emitter.ts\n// module id = 11\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst boundNode_1 = require(\"./boundNode\");\r\nconst nodeConfig_1 = require(\"./nodeConfig\");\r\nconst injector_1 = require(\"../Utils/injector\");\r\nconst decorators_1 = require(\"../Utils/decorators\");\r\nclass ComponentNode extends boundNode_1.BoundNode {\r\n    constructor(nodeDef, constructor, templates) {\r\n        super(nodeDef);\r\n        this.injector = new injector_1.Injector();\r\n        this.component = new constructor(nodeDef.data || nodeDef.static, templates, this, this.injector);\r\n    }\r\n    SetEvents() {\r\n        this.componentEvents = this.eventsScope.Value;\r\n    }\r\n    Fire(event, data) {\r\n        var eventCallback = this.componentEvents && this.componentEvents[event];\r\n        eventCallback && eventCallback(data);\r\n    }\r\n    Init() {\r\n        super.Init();\r\n        this.SetChildren();\r\n    }\r\n    Destroy() {\r\n        super.Destroy();\r\n        this.component.Destroy();\r\n    }\r\n    SetChildren() {\r\n        if (decorators_1.PreReq.Has(this.component)) {\r\n            var preNodes = null;\r\n            injector_1.Injector.Scope(this.injector, () => preNodes = decorators_1.PreReqTemplate.Get(this.component));\r\n            preNodes.forEach(node => {\r\n                this.AddChild(node);\r\n            });\r\n            decorators_1.PreReq.All(this.component).then(() => {\r\n                nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n                    if (this.Destroyed)\r\n                        return;\r\n                    preNodes.forEach(node => {\r\n                        node.Detach();\r\n                        node.Destroy();\r\n                    });\r\n                    this.AddTemplate();\r\n                });\r\n            });\r\n        }\r\n        else\r\n            this.AddTemplate();\r\n    }\r\n    AddTemplate() {\r\n        var nodes = null;\r\n        injector_1.Injector.Scope(this.injector, () => {\r\n            var parentVal = boundNode_1.BoundNode.Immediate;\r\n            boundNode_1.BoundNode.Immediate = this.Immediate;\r\n            nodes = this.component.Template();\r\n            boundNode_1.BoundNode.Immediate = parentVal;\r\n        });\r\n        if (!Array.isArray(nodes))\r\n            nodes = [nodes];\r\n        nodes.forEach(node => {\r\n            this.AddChild(node);\r\n        });\r\n        setTimeout(() => this.component.Bound(), 0);\r\n    }\r\n}\r\nexports.ComponentNode = ComponentNode;\r\n(function (ComponentNode) {\r\n    function ToFunction(type, namespace, constructor) {\r\n        return (nodeDef, templates) => {\r\n            var def = {\r\n                type: type,\r\n                namespace: namespace,\r\n                immediate: nodeDef.immediate,\r\n                props: nodeDef.props,\r\n                attrs: nodeDef.attrs,\r\n                on: nodeDef.on,\r\n                static: nodeDef.static,\r\n                data: nodeDef.data\r\n            };\r\n            var comp = new ComponentNode(def, constructor, templates);\r\n            comp.Init();\r\n            return comp;\r\n        };\r\n    }\r\n    ComponentNode.ToFunction = ToFunction;\r\n})(ComponentNode = exports.ComponentNode || (exports.ComponentNode = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/componentNode.ts\n// module id = 12\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst nodeConfig_1 = require(\"./nodeConfig\");\r\nconst Store_1 = require(\"../Store\");\r\nconst nodeRef_1 = require(\"./nodeRef\");\r\nfunction defaultChildren() {\r\n    return [];\r\n}\r\nexports.defaultChildren = defaultChildren;\r\nclass BoundNode extends nodeRef_1.NodeRef {\r\n    constructor(nodeDef) {\r\n        super(nodeConfig_1.NodeConfig.createNode(nodeDef.type, nodeDef.namespace));\r\n        this.setProperties = false;\r\n        this.setAttributes = false;\r\n        this.setEvents = false;\r\n        this.nodeDef = nodeDef;\r\n        this.immediate = nodeDef.immediate !== undefined ? nodeDef.immediate : BoundNode.Immediate;\r\n    }\r\n    get Immediate() {\r\n        return this.immediate;\r\n    }\r\n    ScheduleSetProperties() {\r\n        if (this.setProperties)\r\n            return;\r\n        this.setProperties = true;\r\n        nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n            this.SetProperties();\r\n            this.setProperties = false;\r\n        });\r\n    }\r\n    SetProperties() {\r\n        if (this.Destroyed)\r\n            return;\r\n        var properties = this.propertiesScope.Value;\r\n        this.SetPropertiesRecursive(this.Node, this.lastProperties, properties);\r\n        this.lastProperties = properties;\r\n    }\r\n    ScheduleSetAttributes() {\r\n        if (this.setAttributes)\r\n            return;\r\n        this.setAttributes = true;\r\n        nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n            this.SetAttributes();\r\n            this.setAttributes = false;\r\n        });\r\n    }\r\n    SetAttributes() {\r\n        if (this.Destroyed)\r\n            return;\r\n        var attributes = this.attributesScope.Value;\r\n        for (var key in attributes) {\r\n            var val = nodeConfig_1.NodeConfig.getAttribute(this.Node, key);\r\n            if (val !== attributes[key])\r\n                nodeConfig_1.NodeConfig.setAttribute(this.Node, key, attributes[key]);\r\n        }\r\n    }\r\n    ScheduleSetEvents() {\r\n        if (this.setEvents)\r\n            return;\r\n        this.setEvents = true;\r\n        nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n            this.SetEvents();\r\n            this.setEvents = false;\r\n        });\r\n    }\r\n    SetEvents() {\r\n        if (this.Destroyed)\r\n            return;\r\n        for (var key in this.lastEvents)\r\n            nodeConfig_1.NodeConfig.removeListener(this.Node, key, this.lastEvents[key]);\r\n        var events = this.eventsScope.Value;\r\n        for (var key in events)\r\n            nodeConfig_1.NodeConfig.addListener(this.Node, key, events[key]);\r\n        this.lastEvents = events;\r\n    }\r\n    Init() {\r\n        super.Init();\r\n        if (this.nodeDef.props) {\r\n            this.propertiesScope = new Store_1.ObservableScope(this.nodeDef.props);\r\n            this.propertiesScope.Watch(this.nodeDef.immediate ? this.SetProperties.bind(this) : this.ScheduleSetProperties.bind(this));\r\n            this.SetProperties();\r\n        }\r\n        if (this.nodeDef.attrs) {\r\n            this.attributesScope = new Store_1.ObservableScope(this.nodeDef.attrs);\r\n            this.attributesScope.Watch(this.nodeDef.immediate ? this.SetAttributes.bind(this) : this.ScheduleSetAttributes.bind(this));\r\n            this.SetAttributes();\r\n        }\r\n        if (this.nodeDef.on) {\r\n            this.eventsScope = new Store_1.ObservableScope(this.nodeDef.on);\r\n            this.eventsScope.Watch(this.nodeDef.immediate ? this.SetEvents.bind(this) : this.ScheduleSetEvents.bind(this));\r\n            this.SetEvents();\r\n        }\r\n    }\r\n    Destroy() {\r\n        super.Destroy();\r\n        this.attributesScope && this.attributesScope.Destroy();\r\n        this.propertiesScope && this.propertiesScope.Destroy();\r\n        this.eventsScope && this.eventsScope.Destroy();\r\n    }\r\n    SetPropertiesRecursive(target, lastValue, source, path = \"\") {\r\n        if (typeof source !== \"object\")\r\n            throw \"Property binding must resolve to an object\";\r\n        for (var key in source) {\r\n            var currentPath = path + key;\r\n            var val = source[key];\r\n            if (val && typeof val === 'object') {\r\n                if (!target[key])\r\n                    target[key] = {};\r\n                this.SetPropertiesRecursive(target[key], lastValue && lastValue[key], val, currentPath + \".\");\r\n            }\r\n            else if (!lastValue || lastValue[key] !== val) {\r\n                if (nodeConfig_1.NodeConfig.setPropertyOverrides[currentPath])\r\n                    nodeConfig_1.NodeConfig.setPropertyOverrides[currentPath](target, val);\r\n                else\r\n                    target[key] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.BoundNode = BoundNode;\r\n(function (BoundNode) {\r\n    BoundNode.Immediate = false;\r\n    function Create(type, namespace, nodeDef) {\r\n        var def = {\r\n            type: type,\r\n            namespace: namespace,\r\n            immediate: nodeDef.immediate,\r\n            props: nodeDef.props,\r\n            attrs: nodeDef.attrs,\r\n            on: nodeDef.on\r\n        };\r\n        var elem = new BoundNode(def);\r\n        elem.Init();\r\n        return elem;\r\n    }\r\n    BoundNode.Create = Create;\r\n})(BoundNode = exports.BoundNode || (exports.BoundNode = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/boundNode.ts\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar store_1 = require(\"./Store/store\");\r\nexports.Store = store_1.Store;\r\nvar storeAsync_1 = require(\"./Store/storeAsync\");\r\nexports.StoreAsync = storeAsync_1.StoreAsync;\r\nvar observableScope_1 = require(\"./Tree/observableScope\");\r\nexports.ObservableScope = observableScope_1.ObservableScope;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/index.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst observableTree_1 = require(\"../Tree/observableTree\");\r\nconst StoreWriter_1 = require(\"./StoreWriter\");\r\nclass Store {\r\n    constructor(init) {\r\n        this.observableTree = new observableTree_1.ObservableTree();\r\n        this.storeWriter = new StoreWriter_1.StoreWriter(this.observableTree);\r\n        this.rootScope = this.observableTree.Scope(\"ROOT\", root => root);\r\n        if (init)\r\n            this.Write(init);\r\n    }\r\n    get Root() {\r\n        return this.rootScope;\r\n    }\r\n    Action(action) {\r\n        var node = this.observableTree.GetNode(\"ROOT\");\r\n        action(node.Proxy, this.storeWriter);\r\n    }\r\n    Write(data) {\r\n        this.Action((root, writer) => writer.Write(root, data));\r\n    }\r\n    Merge(data) {\r\n        this.Action((root, writer) => writer.Merge(root, data));\r\n    }\r\n    Destroy() {\r\n        this.rootScope.Destroy();\r\n        this.observableTree.Destroy();\r\n    }\r\n}\r\nexports.Store = Store;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Store/store.ts\n// module id = 15\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst observableNode_1 = require(\"./observableNode\");\r\nconst observableProxy_1 = require(\"./observableProxy\");\r\nconst observableScope_1 = require(\"./observableScope\");\r\nclass ObservableTree {\r\n    constructor(valuePathResolver) {\r\n        this.valuePathResolver = valuePathResolver;\r\n        this.rootStateMap = new Map();\r\n        this.rootNodeMap = new Map();\r\n    }\r\n    Write(path, value) {\r\n        this.WritePath(path, value);\r\n        this.UpdatePathNode(path);\r\n    }\r\n    WriteAll(data) {\r\n        for (var x = 0; x < data.length; x++)\r\n            this.WritePath(data[x].path, data[x].value);\r\n        for (var y = 0; y < data.length; y++)\r\n            this.UpdatePathNode(data[y].path);\r\n    }\r\n    Get(path) {\r\n        return path.split(\".\").reduce((pre, curr, index) => {\r\n            if (index === 0)\r\n                return this.rootStateMap.get(curr);\r\n            return pre && pre[curr];\r\n        }, null);\r\n    }\r\n    GetNode(path) {\r\n        return path.split(\".\").reduce((pre, curr, index) => {\r\n            if (index === 0) {\r\n                var ret = this.rootNodeMap.get(curr);\r\n                if (!ret) {\r\n                    ret = new observableNode_1.ObservableNode(this, curr, null, this.valuePathResolver);\r\n                    this.rootNodeMap.set(curr, ret);\r\n                }\r\n                return ret;\r\n            }\r\n            return pre.EnsureChild(curr);\r\n        }, null);\r\n    }\r\n    Delete(path) {\r\n        var node = this.GetNode(path);\r\n        node.Destroy();\r\n    }\r\n    Destroy() {\r\n        this.rootStateMap.clear();\r\n        this.rootNodeMap.forEach(node => node.Destroy());\r\n        this.rootNodeMap.clear();\r\n    }\r\n    Scope(path, func) {\r\n        return new observableScope_1.ObservableScope(() => {\r\n            var node = this.GetNode(path);\r\n            return func(node.Proxy);\r\n        });\r\n    }\r\n    WritePath(path, value) {\r\n        var pathParts = path.split(\".\");\r\n        var rootPart = pathParts[0];\r\n        if (pathParts.length === 1)\r\n            this.rootStateMap.set(rootPart, value);\r\n        else {\r\n            var curValue = this.rootStateMap.get(rootPart);\r\n            for (var x = 1; x < pathParts.length - 1; x++) {\r\n                if (!curValue)\r\n                    throw new Error(\"Unable to write path: \" + path + \". Falsey value found at: \" + pathParts.slice(0, x).join(\".\"));\r\n                curValue = curValue[pathParts[x]];\r\n            }\r\n            if (!curValue)\r\n                throw new Error(\"Unable to write path: \" + path + \". Falsey value found at: \" + pathParts.slice(0, x).join(\".\"));\r\n            curValue[pathParts[x]] = value;\r\n        }\r\n    }\r\n    UpdatePathNode(path) {\r\n        var node = this.GetNode(path);\r\n        if (node) {\r\n            node.Update();\r\n            if (node.Parent && node.Parent.Type === observableProxy_1.Type.Array)\r\n                node.Parent.EmitSet();\r\n        }\r\n    }\r\n}\r\nexports.ObservableTree = ObservableTree;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Tree/observableTree.ts\n// module id = 16\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst emitter_1 = require(\"../../Utils/emitter\");\r\nconst observableProxy_1 = require(\"./observableProxy\");\r\nconst observableScope_1 = require(\"./observableScope\");\r\nclass ObservableNode {\r\n    constructor(tree, key, parent, valuePathResolver) {\r\n        this.tree = tree;\r\n        this.key = key;\r\n        this.parent = parent;\r\n        this.valuePathResolver = valuePathResolver;\r\n        this.children = new Map();\r\n        this.emitter = new emitter_1.Emitter();\r\n        this.path = undefined;\r\n        this.value = undefined;\r\n        this.type = undefined;\r\n        this.oldType = undefined;\r\n        this.self = undefined;\r\n        this.proxy = undefined;\r\n        this.nodeArray = undefined;\r\n    }\r\n    get Path() {\r\n        if (this.path === undefined)\r\n            this.path = (this.parent ? this.parent.Path + \".\" : \"\") + this.key;\r\n        return this.path;\r\n    }\r\n    get Value() {\r\n        if (this.value === undefined)\r\n            this.value = this.tree.Get(this.Path);\r\n        return this.value;\r\n    }\r\n    get Type() {\r\n        if (this.type === undefined)\r\n            this.type = observableProxy_1.ObservableProxy.TypeOf(this.Value);\r\n        return this.type;\r\n    }\r\n    get Self() {\r\n        var resolvedPath;\r\n        if (this.self === undefined &&\r\n            this.Type === observableProxy_1.Type.Value &&\r\n            this.valuePathResolver &&\r\n            typeof this.Value === 'string' &&\r\n            (resolvedPath = this.valuePathResolver(this.Value)))\r\n            this.self = this.tree.GetNode(resolvedPath);\r\n        else if (this.self === undefined)\r\n            this.self = this;\r\n        return this.self;\r\n    }\r\n    get Proxy() {\r\n        observableScope_1.ObservableScope.Register(this.emitter);\r\n        if (this.oldType !== undefined) {\r\n            if (this.oldType !== this.Type)\r\n                this.proxy = undefined;\r\n            this.oldType = undefined;\r\n        }\r\n        if (this.proxy)\r\n            return this.proxy;\r\n        if (this.Self !== this)\r\n            return this.Self.Proxy;\r\n        if (this.Type === observableProxy_1.Type.Value)\r\n            return this.Value;\r\n        this.proxy = observableProxy_1.ObservableProxy.CreateFrom(this, this.Type);\r\n        return this.proxy;\r\n    }\r\n    get NodeArray() {\r\n        this.UpdateNodeArray(true);\r\n        return this.nodeArray;\r\n    }\r\n    get Parent() {\r\n        return this.parent;\r\n    }\r\n    get Children() {\r\n        return this.children;\r\n    }\r\n    EnsureChild(key) {\r\n        var child = this.children.get(key);\r\n        if (!child) {\r\n            child = new ObservableNode(this.tree, key, this, this.valuePathResolver);\r\n            this.children.set(key, child);\r\n        }\r\n        return child;\r\n    }\r\n    Update() {\r\n        if (this.oldType === undefined)\r\n            this.oldType = this.Type;\r\n        this.path = undefined;\r\n        this.value = undefined;\r\n        this.type = undefined;\r\n        this.self = undefined;\r\n        this.EmitSet();\r\n        this.children.forEach(node => node.Update());\r\n    }\r\n    EmitSet() {\r\n        this.emitter.Emit(\"set\");\r\n    }\r\n    Destroy() {\r\n        this.parent && this.parent.Children.delete(this.key);\r\n        this.emitter.Clear();\r\n        this.children.forEach(c => c.Destroy());\r\n    }\r\n    UpdateNodeArray(force) {\r\n        if (this.Type === observableProxy_1.Type.Array && (this.nodeArray || force)) {\r\n            var nodeArrayLength = this.nodeArray ? this.nodeArray.length : 0;\r\n            var array = this.Value;\r\n            this.nodeArray = this.nodeArray || new Array(array.length);\r\n            if (array.length > nodeArrayLength) {\r\n                for (var x = nodeArrayLength; x < array.length; x++)\r\n                    this.nodeArray[x] = this.EnsureChild(x.toString());\r\n            }\r\n            else if (array.length < nodeArrayLength)\r\n                this.nodeArray.splice(array.length);\r\n        }\r\n        else\r\n            this.nodeArray = null;\r\n    }\r\n}\r\nexports.ObservableNode = ObservableNode;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Tree/observableNode.ts\n// module id = 17\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Type;\r\n(function (Type) {\r\n    Type[Type[\"Value\"] = 0] = \"Value\";\r\n    Type[Type[\"Object\"] = 1] = \"Object\";\r\n    Type[Type[\"Array\"] = 2] = \"Array\";\r\n})(Type = exports.Type || (exports.Type = {}));\r\nvar ObservableProxy;\r\n(function (ObservableProxy) {\r\n    function TypeOf(value) {\r\n        if (!value)\r\n            return Type.Value;\r\n        if (Array.isArray(value))\r\n            return Type.Array;\r\n        else if (typeof value === 'object')\r\n            return Type.Object;\r\n        return Type.Value;\r\n    }\r\n    ObservableProxy.TypeOf = TypeOf;\r\n    function CreateFrom(node, type) {\r\n        switch (type) {\r\n            case Type.Array:\r\n                return CreateArrayProxy(node);\r\n            case Type.Object:\r\n                return CreateObjectProxy(node);\r\n            default:\r\n                throw new Error(\"Can't create proxy from Value type\");\r\n        }\r\n    }\r\n    ObservableProxy.CreateFrom = CreateFrom;\r\n    function CopyValue(value) {\r\n        var type = TypeOf(value);\r\n        if (type === Type.Value)\r\n            return value;\r\n        if (value.___storeProxy)\r\n            return value.toJSON();\r\n        if (type === Type.Array)\r\n            return value.map(v => CopyValue(v));\r\n        else if (type === Type.Object) {\r\n            var ret = {};\r\n            for (var key in value)\r\n                ret[key] = CopyValue(value[key]);\r\n            return ret;\r\n        }\r\n        return null;\r\n    }\r\n    ObservableProxy.CopyValue = CopyValue;\r\n})(ObservableProxy = exports.ObservableProxy || (exports.ObservableProxy = {}));\r\nfunction CreateArrayProxy(node) {\r\n    return new Proxy([], {\r\n        get: (obj, prop) => {\r\n            switch (prop) {\r\n                case '___type':\r\n                    return Type.Array;\r\n                case '___storeProxy':\r\n                    return true;\r\n                case '___node':\r\n                    return node;\r\n                case 'toJSON':\r\n                    return () => {\r\n                        return CopyNode(node);\r\n                    };\r\n                case 'length':\r\n                    return node.EnsureChild(prop).Value;\r\n                default:\r\n                    if (typeof (prop) !== 'symbol' && !isNaN(parseInt(prop)))\r\n                        return node.EnsureChild(prop).Proxy;\r\n                    var ret = obj[prop];\r\n                    if (typeof ret === 'function') {\r\n                        return ret.bind(node.NodeArray.map(n => n.Proxy));\r\n                    }\r\n                    return ret;\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction CreateObjectProxy(node) {\r\n    return new Proxy({}, {\r\n        get: (obj, prop) => {\r\n            switch (prop) {\r\n                case '___type':\r\n                    return Type.Object;\r\n                case '___storeProxy':\r\n                    return true;\r\n                case '___node':\r\n                    return node;\r\n                case 'toJSON':\r\n                    return () => {\r\n                        return CopyNode(node);\r\n                    };\r\n                default:\r\n                    if (typeof (prop) !== 'symbol')\r\n                        return node.EnsureChild(prop).Proxy;\r\n                    return obj[prop];\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction CopyNode(node) {\r\n    var value = node.Value;\r\n    var type = ObservableProxy.TypeOf(value);\r\n    if (type === Type.Value)\r\n        return value;\r\n    var ret = null;\r\n    if (type === Type.Array)\r\n        ret = value.map((v, i) => CopyNode(node.Self.EnsureChild(i.toString()).Self));\r\n    else {\r\n        ret = {};\r\n        for (var key in value) {\r\n            var child = node.Self.EnsureChild(key);\r\n            ret[key] = CopyNode(child.Self);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Tree/observableProxy.ts\n// module id = 18\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst observableProxy_1 = require(\"../Tree/observableProxy\");\r\nclass StoreWriter {\r\n    constructor(observableTree) {\r\n        this.observableTree = observableTree;\r\n    }\r\n    Write(source, data) {\r\n        var proxy = source;\r\n        var rootPath = proxy && proxy.___node.Path || \"ROOT\";\r\n        this.observableTree.Write(rootPath, data);\r\n    }\r\n    Merge(source, data) {\r\n        var proxy = source;\r\n        var rootPath = proxy.___node.Path;\r\n        if (observableProxy_1.ObservableProxy.TypeOf(data) === observableProxy_1.Type.Value)\r\n            this.observableTree.Write(rootPath, data);\r\n        else\r\n            for (var key in data)\r\n                this.observableTree.Write(`${rootPath}.${key}`, data[key]);\r\n    }\r\n    Push(source, data) {\r\n        var array = source;\r\n        var proxy = source;\r\n        var rootPath = proxy.___node.Path;\r\n        var length = array.length;\r\n        this.observableTree.Write(`${rootPath}.${length}`, data);\r\n    }\r\n    Splice(source, start, deleteCount, ...items) {\r\n        var proxy = source;\r\n        var rootPath = proxy.___node.Path;\r\n        var array = this.observableTree.Get(rootPath);\r\n        array = array.map(val => val);\r\n        array.splice(start, deleteCount, ...items);\r\n        this.observableTree.Write(rootPath, array);\r\n    }\r\n}\r\nexports.StoreWriter = StoreWriter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Store/StoreWriter.ts\n// module id = 19\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst observableTree_1 = require(\"../Tree/observableTree\");\r\nconst diffAsync_1 = require(\"../Diff/diffAsync\");\r\nconst StoreAsyncWriter_1 = require(\"./StoreAsyncWriter\");\r\nclass StoreAsync {\r\n    constructor(idFunc, init) {\r\n        this.idFunc = idFunc;\r\n        this.diffAsync = new diffAsync_1.DiffAsync(this.idFunc);\r\n        this.observableTree = new observableTree_1.ObservableTree(diffAsync_1.DiffAsync.ReadKeyRef);\r\n        this.asyncWriter = new StoreAsyncWriter_1.StoreAsyncWriter(this.idFunc, this.diffAsync, this.observableTree);\r\n        if (init) {\r\n            var id = this.idFunc(init);\r\n            this.observableTree.Write(id, init);\r\n            this.Write(init);\r\n        }\r\n    }\r\n    Scope(id, func) {\r\n        if (func)\r\n            return this.observableTree.Scope(id, func);\r\n        return this.observableTree.Scope(id, (val) => val);\r\n    }\r\n    Action(id, action) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var node;\r\n            if (id)\r\n                node = this.observableTree.GetNode(id);\r\n            yield action(node && node.Proxy, this.asyncWriter);\r\n        });\r\n    }\r\n    Write(data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.Action(null, (val, writer) => __awaiter(this, void 0, void 0, function* () {\r\n                yield writer.Write(data);\r\n            }));\r\n        });\r\n    }\r\n    Merge(id, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.Action(id, (val, writer) => __awaiter(this, void 0, void 0, function* () {\r\n                yield writer.Merge(val, data);\r\n            }));\r\n        });\r\n    }\r\n    Destroy() {\r\n        this.diffAsync.Destroy();\r\n        this.observableTree.Destroy();\r\n    }\r\n}\r\nexports.StoreAsync = StoreAsync;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Store/storeAsync.ts\n// module id = 20\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst diffTree_1 = require(\"./diffTree\");\r\nconst workerQueue_1 = require(\"./workerQueue\");\r\nconst diffWorker_1 = require(\"./diffWorker\");\r\nconst diffCnstr = diffTree_1.DiffTreeScope();\r\nclass DiffAsync {\r\n    constructor(keyFunc) {\r\n        this.workerQueue = new workerQueue_1.WorkerQueue(diffWorker_1.DiffWorker.Create());\r\n        this.workerQueue.Push({ method: \"create\", arguments: [keyFunc.toString()] });\r\n    }\r\n    static GetKeyRef(key) {\r\n        return diffCnstr.GetKeyRef(key);\r\n    }\r\n    static ReadKeyRef(ref) {\r\n        return diffCnstr.ReadKeyRef(ref);\r\n    }\r\n    DiffPath(path, value) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.workerQueue.Push({ method: \"diffpath\", arguments: [path, value] });\r\n        });\r\n    }\r\n    DiffBatch(data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield this.workerQueue.Push({ method: \"diffbatch\", arguments: [data] });\r\n        });\r\n    }\r\n    Destroy() {\r\n        this.workerQueue.Destroy();\r\n    }\r\n}\r\nexports.DiffAsync = DiffAsync;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Diff/diffAsync.ts\n// module id = 21\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction DiffTreeScope(worker) {\r\n    const ctx = this;\r\n    if (ctx && worker) {\r\n        let diffTree = null;\r\n        ctx.onmessage = function (event) {\r\n            var data = event.data;\r\n            switch (data.method) {\r\n                case \"create\":\r\n                    var keyFunc = data.arguments[0] ? eval(data.arguments[0]) : undefined;\r\n                    diffTree = new DiffTree(keyFunc);\r\n                    ctx.postMessage(null);\r\n                    break;\r\n                case \"diffpath\":\r\n                    var diff = diffTree.DiffPath(data.arguments[0], data.arguments[1]);\r\n                    ctx.postMessage(diff);\r\n                    break;\r\n                case \"diffbatch\":\r\n                    var diff = diffTree.DiffBatch(data.arguments[0]);\r\n                    ctx.postMessage(diff);\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n    const jsonConstructor = {}.constructor;\r\n    function IsValue(value) {\r\n        if (!value)\r\n            return true;\r\n        return !(Array.isArray(value) || jsonConstructor === value.constructor);\r\n    }\r\n    class DiffTree {\r\n        constructor(keyFunc) {\r\n            this.keyFunc = keyFunc;\r\n            this.rootStateMap = new Map();\r\n        }\r\n        static GetKeyRef(key) {\r\n            return `___DiffTreeKeyRef.${key}`;\r\n        }\r\n        static ReadKeyRef(ref) {\r\n            if (!ref)\r\n                return undefined;\r\n            var matches = ref.match(/^___DiffTreeKeyRef\\.([^.]+$)/);\r\n            if (!matches)\r\n                return undefined;\r\n            return matches[1];\r\n        }\r\n        DiffBatch(data) {\r\n            var resp = null;\r\n            for (var x = 0; x < data.length; x++) {\r\n                var r = this.DiffPath(data[x].path, data[x].value);\r\n                if (!resp)\r\n                    resp = r;\r\n                else {\r\n                    resp.changedPaths = [...resp.changedPaths, ...r.changedPaths];\r\n                    resp.deletedPaths = [...resp.deletedPaths, ...r.deletedPaths];\r\n                }\r\n            }\r\n            return resp;\r\n        }\r\n        DiffPath(path, value) {\r\n            var breakupMap = this.GetBreakUpMap(path, value);\r\n            var resp = {\r\n                changedPaths: [],\r\n                deletedPaths: []\r\n            };\r\n            breakupMap.forEach((value, key) => {\r\n                var currentValue = key.split(\".\").reduce((pre, curr, index) => {\r\n                    if (index === 0)\r\n                        return this.rootStateMap.get(curr);\r\n                    return pre && pre[curr];\r\n                }, null);\r\n                this.DiffValues(key, value, currentValue, resp);\r\n            });\r\n            resp.changedPaths.forEach(val => {\r\n                var parts = val.path.split(\".\");\r\n                if (parts.length === 1)\r\n                    this.rootStateMap.set(parts[0], val.value);\r\n                else {\r\n                    var curr = this.rootStateMap.get(parts[0]);\r\n                    for (var x = 1; x < parts.length - 1; x++)\r\n                        curr = curr[parts[x]];\r\n                    curr[parts[parts.length - 1]] = val.value;\r\n                }\r\n            });\r\n            return resp;\r\n        }\r\n        GetBreakUpMap(path, value) {\r\n            if (!this.keyFunc)\r\n                return new Map([[path, value]]);\r\n            return this.BreakUpValue(path, value);\r\n        }\r\n        BreakUpValue(path, parent, prop, map) {\r\n            var value = prop ? parent[prop] : parent;\r\n            var isValue = IsValue(value);\r\n            var key = !isValue && this.keyFunc ? this.keyFunc(value) : null;\r\n            var keyRef = key && DiffTree.GetKeyRef(key);\r\n            if (!map)\r\n                map = new Map([[path, key && key !== path ? keyRef : value]]);\r\n            if (isValue)\r\n                return map;\r\n            if (key && key !== path) {\r\n                if (prop)\r\n                    parent[prop] = keyRef;\r\n                map.set(key, value);\r\n                this.BreakUpValue(key, value, null, map);\r\n            }\r\n            else {\r\n                for (var subProp in value) {\r\n                    var childPath = [path, subProp].join(\".\");\r\n                    this.BreakUpValue(childPath, value, subProp, map);\r\n                }\r\n            }\r\n            return map;\r\n        }\r\n        DiffValues(path, newValue, oldValue, resp) {\r\n            if (!oldValue && newValue) {\r\n                resp.changedPaths.push({\r\n                    path: path,\r\n                    value: newValue\r\n                });\r\n                return;\r\n            }\r\n            var newIsObject = !IsValue(newValue);\r\n            var oldIsObject = !IsValue(oldValue);\r\n            if (!newIsObject && !oldIsObject && newValue !== oldValue) {\r\n                resp.changedPaths.push({\r\n                    path: path,\r\n                    value: newValue\r\n                });\r\n                return;\r\n            }\r\n            var newKeys;\r\n            var oldKeys = oldIsObject ? Object.keys(oldValue) : [];\r\n            if (newIsObject)\r\n                newKeys = new Set(Object.keys(newValue));\r\n            else\r\n                newKeys = new Set();\r\n            var pathChanged = false;\r\n            for (var x = 0; x < oldKeys.length; x++) {\r\n                var key = oldKeys[x];\r\n                var childPath = [path, key].join(\".\");\r\n                var deletedKey = !newKeys.has(key);\r\n                if (!deletedKey)\r\n                    newKeys.delete(key);\r\n                pathChanged = pathChanged || deletedKey;\r\n                if (deletedKey)\r\n                    resp.deletedPaths.push(childPath);\r\n                else\r\n                    this.DiffValues(childPath, newValue && newValue[key], oldValue[key], resp);\r\n            }\r\n            if (pathChanged || newKeys.size > 0)\r\n                resp.changedPaths.push({\r\n                    path: path,\r\n                    value: newValue\r\n                });\r\n        }\r\n    }\r\n    return DiffTree;\r\n}\r\nexports.DiffTreeScope = DiffTreeScope;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Diff/diffTree.ts\n// module id = 22\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst asyncQueue_1 = require(\"../../Utils/asyncQueue\");\r\nclass WorkerQueue {\r\n    constructor(worker) {\r\n        this.worker = worker;\r\n        this.asyncQueue = new asyncQueue_1.AsyncQueue();\r\n    }\r\n    Push(message) {\r\n        return new Promise((resolve, reject) => {\r\n            this.asyncQueue.Add(next => {\r\n                this.worker.onmessage = (message) => {\r\n                    resolve(message.data);\r\n                    next();\r\n                };\r\n                this.worker.onerror = (event) => {\r\n                    reject(event);\r\n                    next();\r\n                };\r\n                this.worker.postMessage(message);\r\n            });\r\n            this.asyncQueue.Start();\r\n        });\r\n    }\r\n    Stop() {\r\n        this.asyncQueue.Stop();\r\n    }\r\n    Destroy() {\r\n        this.asyncQueue.Stop();\r\n        this.worker.terminate();\r\n    }\r\n}\r\nexports.WorkerQueue = WorkerQueue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Diff/workerQueue.ts\n// module id = 23\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst list_1 = require(\"./list\");\r\nvar AsyncQueueState;\r\n(function (AsyncQueueState) {\r\n    AsyncQueueState[AsyncQueueState[\"Idle\"] = 0] = \"Idle\";\r\n    AsyncQueueState[AsyncQueueState[\"Running\"] = 1] = \"Running\";\r\n})(AsyncQueueState || (AsyncQueueState = {}));\r\nclass AsyncQueue {\r\n    constructor() {\r\n        this.list = new list_1.List();\r\n        this.state = AsyncQueueState.Idle;\r\n    }\r\n    get Running() {\r\n        return this.state === AsyncQueueState.Running;\r\n    }\r\n    Add(callback) {\r\n        this.list.Add(callback);\r\n    }\r\n    Start(init) {\r\n        if (this.state === AsyncQueueState.Running)\r\n            return;\r\n        this.state = AsyncQueueState.Running;\r\n        this.data = init;\r\n        this.Continue();\r\n    }\r\n    Stop() {\r\n        this.state = AsyncQueueState.Idle;\r\n        this.list.Clear();\r\n        var data = this.data;\r\n        this.data = null;\r\n        return data;\r\n    }\r\n    Continue() {\r\n        if (this.state !== AsyncQueueState.Running)\r\n            return;\r\n        var callback = this.list.Pop();\r\n        if (callback)\r\n            callback((data) => {\r\n                this.data = data;\r\n                this.Continue();\r\n            }, this.data);\r\n        else\r\n            this.Stop();\r\n    }\r\n}\r\nexports.AsyncQueue = AsyncQueue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/asyncQueue.ts\n// module id = 24\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst diffTree_1 = require(\"./diffTree\");\r\nvar DiffWorker;\r\n(function (DiffWorker) {\r\n    var workerConstructor = null;\r\n    var workerParameter = null;\r\n    if (typeof Worker !== 'undefined') {\r\n        workerConstructor = Worker;\r\n        workerParameter = URL.createObjectURL(new Blob([`(${diffTree_1.DiffTreeScope}).call(this, true)`]));\r\n    }\r\n    function Create() {\r\n        if (!workerConstructor)\r\n            throw \"Worker is not available\";\r\n        return new workerConstructor(workerParameter);\r\n    }\r\n    DiffWorker.Create = Create;\r\n})(DiffWorker = exports.DiffWorker || (exports.DiffWorker = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Diff/diffWorker.ts\n// module id = 25\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass StoreAsyncWriter {\r\n    constructor(idFunc, diffAsync, observableTree) {\r\n        this.idFunc = idFunc;\r\n        this.diffAsync = diffAsync;\r\n        this.observableTree = observableTree;\r\n    }\r\n    Write(data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var id = this.idFunc(data);\r\n            if (!id)\r\n                throw new Error(\"data must have an id\");\r\n            var diff = yield this.diffAsync.DiffPath(id, data);\r\n            this.ApplyChanges(diff);\r\n        });\r\n    }\r\n    Merge(source, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var proxy = source;\r\n            var rootPath = proxy.___node.Path;\r\n            var keys = Object.keys(data);\r\n            var message = keys.map(key => ({ path: `${rootPath}.${key}`, value: data[key] }));\r\n            var diff = yield this.diffAsync.DiffBatch(message);\r\n            this.ApplyChanges(diff);\r\n        });\r\n    }\r\n    Push(source, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var array = source;\r\n            var proxy = source;\r\n            var rootPath = proxy.___node.Path;\r\n            var length = array.length;\r\n            var diff = yield this.diffAsync.DiffPath(`${rootPath}.${length}`, data);\r\n            this.ApplyChanges(diff);\r\n        });\r\n    }\r\n    Splice(source, start, deleteCount, ...items) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var proxy = source;\r\n            var rootPath = proxy.___node.Path;\r\n            var array = this.observableTree.Get(rootPath);\r\n            array = array.map(val => val);\r\n            array.splice(start, deleteCount, ...items);\r\n            var diff = yield this.diffAsync.DiffPath(rootPath, array);\r\n            this.ApplyChanges(diff);\r\n        });\r\n    }\r\n    ApplyChanges(diff) {\r\n        for (var x = 0; x < diff.deletedPaths.length; x++)\r\n            this.observableTree.Delete(diff.deletedPaths[x]);\r\n        this.observableTree.WriteAll(diff.changedPaths);\r\n    }\r\n}\r\nexports.StoreAsyncWriter = StoreAsyncWriter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Store/Store/StoreAsyncWriter.ts\n// module id = 26\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Injector {\r\n    constructor() {\r\n        this.parent = Injector.Current();\r\n        this.typeMap = new Map();\r\n    }\r\n    Get(type) {\r\n        if (this.typeMap.size === 0)\r\n            return this.parent && this.parent.Get(type);\r\n        var ret = this.typeMap.get(type);\r\n        if (!ret)\r\n            ret = this.parent && this.parent.Get(type);\r\n        return ret;\r\n    }\r\n    Set(type, instance) {\r\n        this.typeMap.set(type, instance);\r\n    }\r\n}\r\nexports.Injector = Injector;\r\n(function (Injector) {\r\n    var scope = null;\r\n    function Current() {\r\n        return scope;\r\n    }\r\n    Injector.Current = Current;\r\n    function Scope(injector, action) {\r\n        var parent = Current();\r\n        scope = injector;\r\n        action();\r\n        scope = parent;\r\n    }\r\n    Injector.Scope = Scope;\r\n})(Injector = exports.Injector || (exports.Injector = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/injector.ts\n// module id = 27\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst store_1 = require(\"../Store/Store/store\");\r\nconst observableScope_1 = require(\"../Store/Tree/observableScope\");\r\nconst Store_1 = require(\"../Store\");\r\nconst nodeConfig_1 = require(\"../Node/nodeConfig\");\r\nfunction State() {\r\n    return StateDecorator;\r\n}\r\nexports.State = State;\r\nfunction StateDecorator(target, propertyKey) {\r\n    DestroyDecorator(target, `StoreDecorator_${propertyKey}`);\r\n    return {\r\n        configurable: false,\r\n        enumerable: true,\r\n        get: function () {\r\n            var store = this[`StoreDecorator_${propertyKey}`];\r\n            return store ? store.Root.Value : null;\r\n        },\r\n        set: function (val) {\r\n            var store = this[`StoreDecorator_${propertyKey}`];\r\n            if (!store)\r\n                this[`StoreDecorator_${propertyKey}`] = new store_1.Store(val);\r\n            else\r\n                store.Merge(val);\r\n        }\r\n    };\r\n}\r\nfunction Scope() {\r\n    return ScopeDecorator;\r\n}\r\nexports.Scope = Scope;\r\nfunction ScopeDecorator(target, propertyKey, descriptor) {\r\n    if (!(descriptor && descriptor.get))\r\n        throw \"Scope decorator requires a getter\";\r\n    if (descriptor && descriptor.set)\r\n        throw \"Scope decorator does not support setters\";\r\n    DestroyDecorator(target, `ScopeDecorator_${propertyKey}`);\r\n    return {\r\n        configurable: false,\r\n        enumerable: true,\r\n        get: function () {\r\n            var scope = this[`ScopeDecorator_${propertyKey}`];\r\n            if (!scope)\r\n                scope = this[`ScopeDecorator_${propertyKey}`] = new observableScope_1.ObservableScope(descriptor.get.bind(this));\r\n            return scope.Value;\r\n        }\r\n    };\r\n}\r\nfunction Computed() {\r\n    return ComputedDecorator.bind(null, store_1.Store);\r\n}\r\nexports.Computed = Computed;\r\nfunction ComputedAsync() {\r\n    return ComputedDecorator.bind(null, Store_1.StoreAsync);\r\n}\r\nexports.ComputedAsync = ComputedAsync;\r\nfunction ComputedDecorator(storeConstructor, target, propertyKey, descriptor) {\r\n    if (!(descriptor && descriptor.get))\r\n        throw \"Computed decorator requires a getter\";\r\n    if (descriptor && descriptor.set)\r\n        throw \"Computed decorator does not support setters\";\r\n    DestroyDecorator(target, `ComputedDecorator_Scope_${propertyKey}`);\r\n    DestroyDecorator(target, `ComputedDecorator_Store_${propertyKey}`);\r\n    return {\r\n        configurable: false,\r\n        enumerable: true,\r\n        get: function () {\r\n            var store = this[`ComputedDecorator_Store_${propertyKey}`];\r\n            if (!store) {\r\n                var scope = this[`ComputedDecorator_Scope_${propertyKey}`] = new observableScope_1.ObservableScope(descriptor.get.bind(this));\r\n                store = this[`ComputedDecorator_Store_${propertyKey}`] = new storeConstructor(scope.Value);\r\n                scope.Watch(scope => {\r\n                    if (this[`ComputedDecorator_Update_${propertyKey}`])\r\n                        return;\r\n                    this[`ComputedDecorator_Update_${propertyKey}`] = true;\r\n                    nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n                        this[`ComputedDecorator_Update_${propertyKey}`] = false;\r\n                        if (!this.Destroyed)\r\n                            store.Write(scope.Value);\r\n                    });\r\n                });\r\n            }\r\n            return store.Root.Value;\r\n        }\r\n    };\r\n}\r\nfunction Inject(type) {\r\n    return InjectorDecorator.bind(null, type);\r\n}\r\nexports.Inject = Inject;\r\nfunction InjectorDecorator(type, target, propertyKey, descriptor) {\r\n    var parentGet = descriptor && descriptor.get;\r\n    var parentSet = descriptor && descriptor.set;\r\n    return {\r\n        configurable: false,\r\n        enumerable: true,\r\n        get: function () {\r\n            parentGet && parentGet.apply(this);\r\n            return this.Injector.Get(type);\r\n        },\r\n        set: function (val) {\r\n            parentSet && parentSet.apply(this, [val]);\r\n            this.Injector.Set(type, val);\r\n        }\r\n    };\r\n}\r\nfunction Destroy() {\r\n    return DestroyDecorator;\r\n}\r\nexports.Destroy = Destroy;\r\n(function (Destroy) {\r\n    function Get(value) {\r\n        return value && value.DestroyDecorator_Destroys || [];\r\n    }\r\n    function All(value) {\r\n        var arr = Get(value);\r\n        arr.map(prop => value[prop])\r\n            .filter(o => !!o)\r\n            .forEach(o => o.Destroy());\r\n    }\r\n    Destroy.All = All;\r\n})(Destroy = exports.Destroy || (exports.Destroy = {}));\r\nfunction DestroyDecorator(target, propertyKey) {\r\n    var proto = target;\r\n    proto.DestroyDecorator_Destroys = proto.DestroyDecorator_Destroys || [];\r\n    proto.DestroyDecorator_Destroys.push(propertyKey);\r\n}\r\nfunction PreReqTemplate(template) {\r\n    return PreReqTemplateDecorator.bind(null, template);\r\n}\r\nexports.PreReqTemplate = PreReqTemplate;\r\n(function (PreReqTemplate) {\r\n    function Get(value) {\r\n        var func = value && value.PreReqTemplateDecorator_Template;\r\n        var ret = func ? func() : [];\r\n        if (!Array.isArray(ret))\r\n            ret = [ret];\r\n        return ret;\r\n    }\r\n    PreReqTemplate.Get = Get;\r\n})(PreReqTemplate = exports.PreReqTemplate || (exports.PreReqTemplate = {}));\r\nfunction PreReqTemplateDecorator(template, target) {\r\n    var proto = target.prototype;\r\n    proto.PreReqTemplateDecorator_Template = template;\r\n}\r\nfunction PreReq() {\r\n    return PreReqDecorator;\r\n}\r\nexports.PreReq = PreReq;\r\n(function (PreReq) {\r\n    function Get(value) {\r\n        return value && value.PreReqDecorator_PreReqs || [];\r\n    }\r\n    function All(value) {\r\n        var arr = Get(value).map((prop) => (value[prop] && value[prop].Init) || Promise.resolve());\r\n        return Promise.all(arr);\r\n    }\r\n    PreReq.All = All;\r\n    function Has(value) {\r\n        return Get(value).length > 0;\r\n    }\r\n    PreReq.Has = Has;\r\n})(PreReq = exports.PreReq || (exports.PreReq = {}));\r\nfunction PreReqDecorator(target, propertyKey) {\r\n    var proto = target;\r\n    proto.PreReqDecorator_PreReqs = proto.PreReqDecorator_PreReqs || [];\r\n    proto.PreReqDecorator_PreReqs.push(propertyKey);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/decorators.ts\n// module id = 28\n// module chunks = 0","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./decorators\"));\r\n__export(require(\"./animation\"));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/index.ts\n// module id = 29\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar StepFunctions;\r\n(function (StepFunctions) {\r\n    function* EaseIn(count) {\r\n        var diff = 1 / count;\r\n        for (var t = diff, x = 0; x < count; x++, t += diff)\r\n            yield (1 - t) * (1 - t) * (1 - t) * 0 + 3 * (1 - t) * (1 - t) * t * 1 + 3 * (1 - t) * t * t * 1 + t * t * t * 1;\r\n    }\r\n    StepFunctions.EaseIn = EaseIn;\r\n    function* Linear(count) {\r\n        var diff = 1 / count;\r\n        for (var t = diff, x = 0; x < count; x++, t += diff)\r\n            yield t;\r\n    }\r\n    StepFunctions.Linear = Linear;\r\n})(StepFunctions || (StepFunctions = {}));\r\nvar AnimationType;\r\n(function (AnimationType) {\r\n    AnimationType[AnimationType[\"Linear\"] = 0] = \"Linear\";\r\n    AnimationType[AnimationType[\"EaseIn\"] = 1] = \"EaseIn\";\r\n})(AnimationType = exports.AnimationType || (exports.AnimationType = {}));\r\nclass Animation {\r\n    constructor(type, duration, update) {\r\n        this.running = false;\r\n        this.start = null;\r\n        this.end = null;\r\n        this.enabled = true;\r\n        this.type = type;\r\n        this.frameCount = (duration / 1000) * 60;\r\n        this.frameTimings = new Array(this.frameCount);\r\n        var frameTime = duration / this.frameCount;\r\n        for (var x = 0; x < this.frameCount; x++)\r\n            this.frameTimings[x] = (x + 1) * frameTime;\r\n        this.update = update;\r\n        this.animationTimeouts = new Array(this.frameCount);\r\n    }\r\n    get Running() {\r\n        return this.running;\r\n    }\r\n    get Start() {\r\n        return this.start;\r\n    }\r\n    get End() {\r\n        return this.end;\r\n    }\r\n    get Enabled() {\r\n        return this.enabled;\r\n    }\r\n    Animate(start, end) {\r\n        if (!this.enabled)\r\n            return;\r\n        var diff = end - start;\r\n        if (diff === 0)\r\n            return;\r\n        this.Cancel();\r\n        this.running = true;\r\n        this.start = start;\r\n        this.end = end;\r\n        return new Promise(resolve => {\r\n            var stepFunc = StepFunctions[AnimationType[this.type]];\r\n            var index = 0;\r\n            for (var step of stepFunc(this.frameCount)) {\r\n                var value = (step * diff) + start;\r\n                this.SetTimeout(index, value, index === (this.frameCount - 1) ? resolve : null);\r\n                index++;\r\n            }\r\n        }).then(() => {\r\n            this.running = false;\r\n            this.start = null;\r\n            this.end = null;\r\n        });\r\n    }\r\n    Disable() {\r\n        this.Cancel();\r\n        this.enabled = false;\r\n    }\r\n    Enable() {\r\n        this.enabled = true;\r\n    }\r\n    Cancel() {\r\n        for (var x = 0; x < this.animationTimeouts.length; x++)\r\n            clearTimeout(this.animationTimeouts[x]);\r\n        this.running = false;\r\n        this.start = null;\r\n        this.end = null;\r\n    }\r\n    Destroy() {\r\n        this.Cancel();\r\n    }\r\n    SetTimeout(index, value, resolve) {\r\n        this.animationTimeouts[index] = setTimeout(() => {\r\n            this.update(value);\r\n            resolve && resolve();\r\n        }, this.frameTimings[index]);\r\n    }\r\n}\r\nexports.Animation = Animation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/animation.ts\n// module id = 30\n// module chunks = 0","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./elements\"));\r\n__export(require(\"./svgElements\"));\r\n__export(require(\"./utils\"));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/index.ts\n// module id = 31\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst elementNode_1 = require(\"../Node/elementNode\");\r\nfunction div(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"div\", null, nodeDef, children);\r\n}\r\nexports.div = div;\r\nfunction a(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"a\", null, nodeDef, children);\r\n}\r\nexports.a = a;\r\nfunction ul(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"ul\", null, nodeDef, children);\r\n}\r\nexports.ul = ul;\r\nfunction li(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"li\", null, nodeDef, children);\r\n}\r\nexports.li = li;\r\nfunction br(nodeDef) {\r\n    return elementNode_1.ElementNode.Create(\"br\", null, nodeDef, null);\r\n}\r\nexports.br = br;\r\nfunction b(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"b\", null, nodeDef, children);\r\n}\r\nexports.b = b;\r\nfunction span(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"span\", null, nodeDef, children);\r\n}\r\nexports.span = span;\r\nfunction img(nodeDef) {\r\n    return elementNode_1.ElementNode.Create(\"img\", null, nodeDef, null);\r\n}\r\nexports.img = img;\r\nfunction video(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"video\", null, nodeDef, children);\r\n}\r\nexports.video = video;\r\nfunction source(nodeDef) {\r\n    return elementNode_1.ElementNode.Create(\"source\", null, nodeDef, null);\r\n}\r\nexports.source = source;\r\nfunction input(nodeDef) {\r\n    nodeDef.immediate = true;\r\n    return elementNode_1.ElementNode.Create(\"input\", null, nodeDef, null);\r\n}\r\nexports.input = input;\r\nfunction select(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"select\", null, nodeDef, children);\r\n}\r\nexports.select = select;\r\nfunction option(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"option\", null, nodeDef, children);\r\n}\r\nexports.option = option;\r\nfunction h1(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"h1\", null, nodeDef, children);\r\n}\r\nexports.h1 = h1;\r\nfunction h2(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"h2\", null, nodeDef, children);\r\n}\r\nexports.h2 = h2;\r\nfunction h3(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"h3\", null, nodeDef, children);\r\n}\r\nexports.h3 = h3;\r\nfunction p(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"p\", null, nodeDef, children);\r\n}\r\nexports.p = p;\r\nfunction style(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"style\", null, nodeDef, children);\r\n}\r\nexports.style = style;\r\nfunction button(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"button\", null, nodeDef, children);\r\n}\r\nexports.button = button;\r\nfunction text(value) {\r\n    var valueFunc = null;\r\n    if (typeof value === 'string')\r\n        valueFunc = () => value;\r\n    else\r\n        valueFunc = value;\r\n    return elementNode_1.ElementNode.Create(\"text\", null, { props: () => ({ nodeValue: valueFunc() }) });\r\n}\r\nexports.text = text;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/elements.ts\n// module id = 32\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst boundNode_1 = require(\"./boundNode\");\r\nconst observableScope_1 = require(\"../Store/Tree/observableScope\");\r\nconst nodeConfig_1 = require(\"./nodeConfig\");\r\nconst injector_1 = require(\"../Utils/injector\");\r\nconst list_1 = require(\"../Utils/list\");\r\nconst asyncQueue_1 = require(\"../Utils/asyncQueue\");\r\nclass ElementNode extends boundNode_1.BoundNode {\r\n    constructor(nodeDef) {\r\n        super(nodeDef);\r\n        this.setData = false;\r\n        this.setData = false;\r\n        this.nodesMap = new Map();\r\n        this.childrenFunc = nodeDef.children || boundNode_1.defaultChildren;\r\n        this.dataScope = new observableScope_1.ObservableScope(nodeDef.data || nodeDef.static || true);\r\n        this.arrayScope = this.dataScope.Scope(data => {\r\n            var value = data;\r\n            if (!value)\r\n                value = [];\r\n            else if (!Array.isArray(value))\r\n                value = [value];\r\n            return value;\r\n        });\r\n        this.asyncQueue = new asyncQueue_1.AsyncQueue();\r\n        this.injector = injector_1.Injector.Current();\r\n        this.arrayScope.Watch(() => this.ScheduleSetData());\r\n    }\r\n    ScheduleSetData() {\r\n        if (this.setData)\r\n            return;\r\n        this.setData = true;\r\n        this.asyncQueue.Stop();\r\n        nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n            this.setData = false;\r\n            if (this.Destroyed)\r\n                return;\r\n            this.SetData();\r\n        });\r\n    }\r\n    SetData() {\r\n        this.asyncQueue.Stop();\r\n        var newNodesMap = new Map();\r\n        this.arrayScope.Value.forEach(value => {\r\n            var nodeArrayList = this.nodesMap.get(value);\r\n            var nodes = nodeArrayList && nodeArrayList.Remove();\r\n            if (nodeArrayList && nodeArrayList.Size === 0)\r\n                this.nodesMap.delete(value);\r\n            var newNodeArrayList = newNodesMap.get(value);\r\n            if (!newNodeArrayList) {\r\n                newNodeArrayList = new list_1.List();\r\n                newNodesMap.set(value, newNodeArrayList);\r\n            }\r\n            if (nodes)\r\n                newNodeArrayList.Push(nodes);\r\n            this.asyncQueue.Add((next, data) => {\r\n                nodeConfig_1.NodeConfig.scheduleUpdate(() => {\r\n                    if (this.Destroyed)\r\n                        return;\r\n                    if (!nodes) {\r\n                        nodes = this.CreateNodeArray(value);\r\n                        newNodeArrayList.Push(nodes);\r\n                    }\r\n                    for (var x = 0; x < nodes.length; x++) {\r\n                        this.AddChildAfter(data.previousNode, nodes[x]);\r\n                        data.previousNode = nodes[x];\r\n                    }\r\n                    next(data);\r\n                });\r\n            });\r\n        });\r\n        this.nodesMap.forEach(nodeArrayList => nodeArrayList.ForEach(nodes => nodes.forEach(node => {\r\n            node.Detach();\r\n            node.Destroy();\r\n        })));\r\n        this.nodesMap = newNodesMap;\r\n        this.asyncQueue.Start({ previousNode: null });\r\n    }\r\n    CreateNodeArray(value) {\r\n        var nodes = null;\r\n        injector_1.Injector.Scope(this.injector, () => {\r\n            var parentVal = boundNode_1.BoundNode.Immediate;\r\n            boundNode_1.BoundNode.Immediate = this.Immediate;\r\n            var newNodes = this.childrenFunc(value);\r\n            if (typeof newNodes === \"string\")\r\n                newNodes = [boundNode_1.BoundNode.Create(\"text\", null, { props: () => ({ nodeValue: this.childrenFunc(value) }) })];\r\n            nodes = newNodes;\r\n            if (!Array.isArray(nodes))\r\n                nodes = [nodes];\r\n            boundNode_1.BoundNode.Immediate = parentVal;\r\n        });\r\n        return nodes;\r\n    }\r\n    Init() {\r\n        super.Init();\r\n        if (this.Immediate) {\r\n            this.SetData();\r\n        }\r\n        else {\r\n            this.ScheduleSetData();\r\n        }\r\n    }\r\n    Destroy() {\r\n        super.Destroy();\r\n        this.asyncQueue.Stop();\r\n        this.dataScope.Destroy();\r\n        this.arrayScope.Destroy();\r\n    }\r\n}\r\nexports.ElementNode = ElementNode;\r\n(function (ElementNode) {\r\n    function Create(type, namespace, nodeDef, children) {\r\n        var def = {\r\n            type: type,\r\n            namespace: namespace,\r\n            immediate: nodeDef.immediate,\r\n            props: nodeDef.props,\r\n            attrs: nodeDef.attrs,\r\n            on: nodeDef.on,\r\n            static: nodeDef.static,\r\n            data: nodeDef.data,\r\n            children: children\r\n        };\r\n        var elem = new ElementNode(def);\r\n        elem.Init();\r\n        return elem;\r\n    }\r\n    ElementNode.Create = Create;\r\n})(ElementNode = exports.ElementNode || (exports.ElementNode = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Node/elementNode.ts\n// module id = 33\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst elementNode_1 = require(\"../Node/elementNode\");\r\nconst svgNs = \"http://www.w3.org/2000/svg\";\r\nfunction svg(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"svg\", svgNs, nodeDef, children);\r\n}\r\nexports.svg = svg;\r\nfunction g(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"g\", svgNs, nodeDef, children);\r\n}\r\nexports.g = g;\r\nfunction circle(nodeDef, children) {\r\n    return elementNode_1.ElementNode.Create(\"circle\", svgNs, nodeDef, children);\r\n}\r\nexports.circle = circle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DOM/svgElements.ts\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}